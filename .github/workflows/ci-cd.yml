name: Microservices CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'
        
    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven
      run: mvn -B clean package
      
    - name: Run Tests
      run: mvn -B test
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: jars
        path: |
          */target/*.jar
          
  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Download artifacts
      uses: actions/download-artifact@v2
      with:
        name: jars
        
    - name: Move JARs to correct locations
      run: |
        mkdir -p eureka-server/target/
        mkdir -p config-server/target/
        mkdir -p api-gateway/target/
        mkdir -p product-service/target/
        mkdir -p order-service/target/
        
        mv eureka-server-*.jar eureka-server/target/eureka-server-0.0.1-SNAPSHOT.jar
        mv config-server-*.jar config-server/target/config-server-0.0.1-SNAPSHOT.jar
        mv api-gateway-*.jar api-gateway/target/api-gateway-0.0.1-SNAPSHOT.jar
        mv product-service-*.jar product-service/target/product-service-0.0.1-SNAPSHOT.jar
        mv order-service-*.jar order-service/target/order-service-0.0.1-SNAPSHOT.jar
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
        
    - name: Build and push Eureka Server
      uses: docker/build-push-action@v2
      with:
        context: ./eureka-server
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/eureka-server:latest
        
    - name: Build and push Config Server
      uses: docker/build-push-action@v2
      with:
        context: ./config-server
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/config-server:latest
        
    - name: Build and push API Gateway
      uses: docker/build-push-action@v2
      with:
        context: ./api-gateway
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/api-gateway:latest
        
    - name: Build and push Product Service
      uses: docker/build-push-action@v2
      with:
        context: ./product-service
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/product-service:latest
        
    - name: Build and push Order Service
      uses: docker/build-push-action@v2
      with:
        context: ./order-service
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/order-service:latest
        
  deploy-to-kubernetes:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure kubectl
      uses: azure/k8s-set-context@v1
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
      
    - name: Deploy to Kubernetes
      run: |
        # 替換 Kubernetes 資源文件中的映像標籤
        sed -i 's/{username}/${{ secrets.DOCKER_HUB_USERNAME }}/g' kubernetes/**/*.yaml
        
        # 按順序部署服務
        kubectl apply -f kubernetes/eureka-server/
        sleep 30
        kubectl apply -f kubernetes/config-server/
        sleep 30
        kubectl apply -f kubernetes/product-service/
        kubectl apply -f kubernetes/order-service/
        kubectl apply -f kubernetes/api-gateway/
        
    - name: Verify deployment
      run: |
        kubectl get pods
        kubectl get services
